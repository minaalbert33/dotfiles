# Basic Settings
set hidden true
set ignorecase true
# set mouse true
# set icons true
# set drawbox true
set cleaner '~/.config/lf/cleaner'
set previewer '~/.config/lf/scope'
set preview true
set ratios 1:3:2

# Custom Functions
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  touch $ans 
}}

cmd openwith ${{
    printf "Enter program name: "

    read ans
    ["$ans" = "nvim"] &&  st -e nvim "$fx" & disown
    $ans "$fx" & disown



}}

# dedicated keys for file opener actions
# cmd video_preview ${{
#     cache="$(mktemp "${TMPDIR:-/tmp}/thumb_cache.XXXXX")"
#     ffmpegthumbnailer -i "$f" -o "$cache" -s 0
#     # ~/.config/lf/draw_img.sh "$cache"
# }}
# map + :video_preview

cmd open ${{    
    test -L $f && f=$(readlink -f $f)    
    case "$(file --mime-type "$f" -b)" in    
        text/*) st -e nvim  "$fx" & disown  ;;    
        application/pdf) zathura "$fx" & disown ;;
        image/*) sxiv "$fx" & disown;;
        audio/*) vlc "$fx" & disown;; 
        video/*) vlc "$fx" & disown;;
        *) for f in $fx; do xdg-open $f > /dev/null 2> /dev/null & done;;    
    esac    
}}  






# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}
# dedicated keys for file opener actions


# Trash bindings
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    file=${files%%;*}

    trash-put "$(basename "$file")"
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd restore_trash ${{
  trash-restore
}}


cmd final_delete ${{
    printf "Are U sure to delete this ?: "
    read ans
    if [ "$ans" = "y" ]; then
        if [ -d "$fx" ]; then
            rm -rf "$fx"
        else
            rm "$fx"
        fi
    else
        echo "Deletion cancelled."
    fi
}}

# Bindings
map d
map m
map o openwith
map L redraw


map au unarchive
# map ae $wine "$f"

# Basic Functions
map . set hidden!
map dt trash
map df final_delete
map dr restore_trash
map p paste
map dd cut
map yy copy
map <enter> open
map R reload
map mf mkfile
map md mkdir
map C clear

# Movement
map gdf cd ~/hdd/D/Mina/Films/
map gdd cd ~/hdd/D
map gdm cd ~/hdd/D/music
map gf cd ~/hdd/F
map gD cd ~/Downloads/
map gl cd ~/.local
map gb cd ~/books/
map gc cd ~/.config
map gr cd ~/repos
